<templateSet group="hgdata">
  <template name="LOG4J" value="private static final org.apache.logging.log4j.Logger LOGGER = org.apache.logging.log4j.LogManager.getLogger($CLASS$.class);&#10;" description="add a log4j logger" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <variable name="CLASS" expression="className" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="provides" value="@com.google.inject.Provides&#10;public final $TYPE$ provide$TYPE$() {&#10;    return null;&#10;}" description="" toReformat="true" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="sprovides" value="@com.google.inject.Singleton&#10;@com.google.inject.Provides&#10;public final $TYPE$ provide$TYPE$() {&#10;    return null;&#10;}" description="" toReformat="true" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="WITH" value="public $CLASS$ with$FIELD$(final $TYPE$ $FIELD_LOWER$) {&#10;    this.$FIELD_LOWER$ = $FIELD_LOWER$;&#10;    return this;&#10;}" description="add a withXXX factory method" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS" expression="className" defaultValue="" alwaysStopAt="false" />
    <variable name="FIELD" expression="capitalize()" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="expectedType()" defaultValue="" alwaysStopAt="false" />
    <variable name="FIELD_LOWER" expression="decapitalize(FIELD)" defaultValue="FIELD" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="RLOCK" value="$LOCK$.readLock().lock();&#10;try { &#10;  $SELECTION$&#10;} finally {&#10;  $LOCK$.readLock().unlock();&#10;}&#10;" description="Surround with ReadWriteLock.readLock" toReformat="true" toShortenFQNames="true">
    <variable name="LOCK" expression="variableOfType(&quot;java.util.concurrent.locks.ReadWriteLock&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="TIMER" value="final com.codahale.metrics.Timer.Context timerContext = $NAME$.time();&#10;try {&#10;    $SELECTION$&#10;} finally {&#10;    timerContext.stop();&#10;}" description="surround with CodaHale Timer measurement" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <variable name="NAME" expression="variableOfType(&quot;com.codahale.metrics.Timer&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="WLOCK" value="$LOCK$.writeLock().lock();&#10;try { &#10;  $SELECTION$&#10;} finally {&#10;  $LOCK$.writeLock().unlock();&#10;}&#10;" description="Surround with ReadWriteLock.writeLock" toReformat="true" toShortenFQNames="true">
    <variable name="LOCK" expression="variableOfType(&quot;java.util.concurrent.locks.ReadWriteLock&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>